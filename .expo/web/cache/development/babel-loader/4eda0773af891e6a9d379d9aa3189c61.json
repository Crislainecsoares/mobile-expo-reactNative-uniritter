{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { create } from 'apisauce';\nvar api = create({\n  baseURL: 'http://192.168.0.14:3333'\n});\napi.addAsyncRequestTransform(function (request) {\n  return function _callee() {\n    var token;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@CodeApi:token'));\n\n          case 2:\n            token = _context.sent;\n            if (token) request.headers['Authorization'] = \"Bearer \" + token;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n});\napi.addResponseTransform(function (response) {\n  if (!response.ok) throw response;\n});\nexport default api;","map":{"version":3,"sources":["/home/local/DOMAINNT/crislaines/Documents/trabalho-android-crislaine-soares/mobile/src/services/api.js"],"names":["create","api","baseURL","addAsyncRequestTransform","request","AsyncStorage","getItem","token","headers","addResponseTransform","response","ok"],"mappings":";;AACA,SAASA,MAAT,QAAuB,UAAvB;AAGA,IAAMC,GAAG,GAAGD,MAAM,CAAC;AACfE,EAAAA,OAAO,EAAE;AADM,CAAD,CAAlB;AAIAD,GAAG,CAACE,wBAAJ,CAA6B,UAAAC,OAAO;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAChBC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CADgB;;AAAA;AAC9BC,YAAAA,KAD8B;AAGpC,gBAAIA,KAAJ,EACAH,OAAO,CAACI,OAAR,CAAgB,eAAhB,gBAA6CD,KAA7C;;AAJoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAJ;AAAA,CAApC;AAOAN,GAAG,CAACQ,oBAAJ,CAAyB,UAAAC,QAAQ,EAAI;AACjC,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB,MAAMD,QAAN;AACrB,CAFD;AAIA,eAAeT,GAAf","sourcesContent":["import { AsyncStorage } from 'react-native'\nimport { create } from 'apisauce';\n\n\nconst api = create({\n    baseURL: 'http://192.168.0.14:3333',\n});\n\napi.addAsyncRequestTransform(request => async () => {\n    const token = await AsyncStorage.getItem('@CodeApi:token');\n    \n    if (token)\n    request.headers['Authorization'] = `Bearer ${token}`;\n});\n\napi.addResponseTransform(response => {\n    if (!response.ok) throw response;\n});\n\nexport default api;\n\n"]},"metadata":{},"sourceType":"module"}